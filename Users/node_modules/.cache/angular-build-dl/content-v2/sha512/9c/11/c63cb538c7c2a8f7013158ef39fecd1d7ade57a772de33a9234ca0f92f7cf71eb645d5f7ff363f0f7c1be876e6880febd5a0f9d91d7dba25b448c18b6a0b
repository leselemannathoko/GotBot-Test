{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/user.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/save.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","saveService","title","userData","loadUsers","_id","registerUser","subscribe","user","updateUser","getUsers","users","error","console","person","postUsers","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","User","RegisterComponent","SaveService","http","use","post","get","put","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { SaveService } from './save.service';\r\nimport { User } from './models/user';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Users';\r\n  users: User[];\r\n  selecteduser: User;\r\n  userData: User;\r\n\r\n  constructor( private saveService: SaveService) {\r\n    this.userData = new User();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.loadUsers();\r\n  }\r\n\r\npostUsers() {\r\n  if (this.userData._id === '') {\r\n    this.saveService.registerUser(this.userData).subscribe((user: User) => {\r\n    });\r\n  } else {\r\n    this.saveService.updateUser(this.userData).subscribe((user: User) => {\r\n      this.loadUsers();\r\n    });\r\n  }\r\n  }\r\n\r\nloadUsers() {\r\n    this.saveService.getUsers().subscribe((users: User[]) => {\r\n      this.users = users;\r\n    }, error => {\r\n      console.error();\r\n    });\r\n  }\r\n\r\nupdateUser(person: User) {\r\n  this.userData = person;\r\n}\r\n\r\n}\r\n\r\n","<div class=\"row pt-5\">\r\n<div class=\"col-md-6 mx-auto\">\r\n <div class=\"card rounded-0\">\r\n   <div class=\"card-header\">\r\n     <h3 class=\"mb-0\">DataForm</h3>\r\n   </div>\r\n   <div class=\"card-body\">\r\n    <form action=\"\" #registerForm=\"ngForm\" (ngSubmit)=\"registerForm\">\r\n      <input [(ngModel)] =\"userData._id\" name=\"id\"  type=\"hidden\" class=\"form-control rounded-0\" required>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Email</label>\r\n        <input [(ngModel)] =\"userData.email\" name=\"email\"  type=\"text\" class=\"form-control rounded-0\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Mobile No.</label>\r\n        <input [(ngModel)] =\"userData.mobile\" name=\"mobile\"  type=\"text\" class=\"form-control rounded-0\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Name</label>\r\n        <input [(ngModel)] =\"userData.name\" name=\"Name\"  type=\"text\" class=\"form-control rounded-0\" required>\r\n      </div>\r\n\r\n      <button (click) =\"postUsers()\" type=\"button\" class=\"btn btn-primary float-right\">Save</button>\r\n    </form>\r\n   </div>\r\n </div>\r\n</div>\r\n\r\n<div class=\"col s7\">\r\n  <table class=\"responsive-table highlight\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>email</th>\r\n          <th>mobile</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tr *ngFor=\"let person of users\">\r\n        <td>{{person.name}}</td>\r\n        <td>{{person.email}}</td>\r\n        <td>{{person.mobile}}</td>\r\n        <td>\r\n            <button (click) =\"updateUser(person)\" type=\"button\" class=\"btn btn-secondary float-right\">edit</button>\r\n          </td>\r\n      </tr>\r\n    </table>\r\n</div>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SaveService } from './save.service';\r\n\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      RegisterComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpClientModule\r\n   ],\r\n   providers: [SaveService],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","export class User {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    mobile: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  register works!\r\n</p>\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaveService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  registerUser(use: User): Observable<User> {\r\n    return this.http.post<User>(`http://localhost:3000/api/register` , use);\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(`http://localhost:3000/api/getUsers`);\r\n  }\r\n\r\n   updateUser(person: User) {\r\n     return this.http.put(`http://localhost:3000/api/update/${person._id}`, person);\r\n   }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}